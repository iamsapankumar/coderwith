// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:badhat_b2b/data/cart_response_entity.dart';
import 'package:badhat_b2b/data/category_entity.dart';
import 'package:badhat_b2b/data/chat_response_entity.dart';
import 'package:badhat_b2b/data/chat_room_response_entity.dart';
import 'package:badhat_b2b/data/favorite_response_entity.dart';
import 'package:badhat_b2b/data/notification_response_entity.dart';
import 'package:badhat_b2b/data/order_placed_response_entity.dart';
import 'package:badhat_b2b/data/order_received_response_entity.dart';
import 'package:badhat_b2b/data/placed_order_detail_entity.dart';
import 'package:badhat_b2b/data/product_detail_entity.dart';
import 'package:badhat_b2b/data/product_entity.dart';
import 'package:badhat_b2b/data/search_result_entity.dart';
import 'package:badhat_b2b/data/send_message_response_entity.dart';
import 'package:badhat_b2b/data/state_district_model_entity.dart';
import 'package:badhat_b2b/data/subcategory_entity.dart';
import 'package:badhat_b2b/data/subcategoryresponse_entity.dart';
import 'package:badhat_b2b/data/user_detail_response_entity.dart';
import 'package:badhat_b2b/data/user_entity.dart';
import 'package:badhat_b2b/data/vertical_entity.dart';
import 'package:badhat_b2b/generated/json/cart_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/category_entity_helper.dart';
import 'package:badhat_b2b/generated/json/chat_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/chat_room_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/favorite_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/notification_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/order_placed_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/order_received_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/placed_order_detail_entity_helper.dart';
import 'package:badhat_b2b/generated/json/product_detail_entity_helper.dart';
import 'package:badhat_b2b/generated/json/product_entity_helper.dart';
import 'package:badhat_b2b/generated/json/search_result_entity_helper.dart';
import 'package:badhat_b2b/generated/json/send_message_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/state_district_model_entity_helper.dart';
import 'package:badhat_b2b/generated/json/subcategoryresponse_entity_helper.dart';
import 'package:badhat_b2b/generated/json/user_detail_response_entity_helper.dart';
import 'package:badhat_b2b/generated/json/user_entity_helper.dart';
import 'package:badhat_b2b/generated/json/vertical_entity_helper.dart';

import '../subcategory_entity_helper.dart';

class JsonConvert<T> {
  T fromJson(Map<String, dynamic> json) {
    return _getFromJson<T>(runtimeType, this, json);
  }

  Map<String, dynamic> toJson() {
    return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
      case SubcategoryResponseEntity:
        return subcategoryResponseEntityFromJson(
            data as SubcategoryResponseEntity, json) as T;
      case SubcategoryResponseData:
        return subcategoryResponseDataFromJson(
            data as SubcategoryResponseData, json) as T;
      case SubcategoryEntity:
        return subcategoryEntityFromJson(
            data as SubcategoryEntity, json) as T;
      case SubcategoryData:
        return subcategoryDataFromJson(
            data as SubcategoryData, json) as T;
      case VerticalEntity:
        return verticalEntityFromJson(
            data as VerticalEntity, json) as T;
      case VerticalData:
        return verticalDataFromJson(
            data as VerticalData, json) as T;
      case SubcategoryVertical:
        return subcategoryVerticalFromJson(data as SubcategoryVertical, json)
            as T;
      case SendMessageResponseEntity:
        return sendMessageResponseEntityFromJson(
            data as SendMessageResponseEntity, json) as T;

      case ProductEntity:
        return productEntityFromJson(data as ProductEntity, json) as T;
      case ProductData:
        return productDataFromJson(data as ProductData, json) as T;
      case ProductDataCategory:
        return productDataCategoryFromJson(data as ProductDataCategory, json)
            as T;
      case NotificationResponseEntity:
        return notificationResponseEntityFromJson(
            data as NotificationResponseEntity, json) as T;
      case NotificationResponseData:
        return notificationResponseDataFromJson(
            data as NotificationResponseData, json) as T;
      case UserEntity:
        return userEntityFromJson(data as UserEntity, json) as T;
      case UserData:
        return userDataFromJson(data as UserData, json) as T;
      case UserDataUser:
        return userDataUserFromJson(data as UserDataUser, json) as T;
      case ChatResponseEntity:
        return chatResponseEntityFromJson(data as ChatResponseEntity, json)
            as T;
      case ChatResponseData:
        return chatResponseDataFromJson(data as ChatResponseData, json) as T;
      case FavoriteResponseEntity:
        return favoriteResponseEntityFromJson(
            data as FavoriteResponseEntity, json) as T;
      case FavoriteResponseData:
        return favoriteResponseDataFromJson(data as FavoriteResponseData, json)
            as T;
      case FavoriteResponseDataVendor:
        return favoriteResponseDataVendorFromJson(
            data as FavoriteResponseDataVendor, json) as T;
      case UserDetailResponseEntity:
        return userDetailResponseEntityFromJson(
            data as UserDetailResponseEntity, json) as T;
      case UserDetailResponseData:
        return userDetailResponseDataFromJson(
            data as UserDetailResponseData, json) as T;
      case UserDetailResponseDataProduct:
        return userDetailResponseDataProductFromJson(
            data as UserDetailResponseDataProduct, json) as T;
      case OrderReceivedResponseEntity:
        return orderReceivedResponseEntityFromJson(
            data as OrderReceivedResponseEntity, json) as T;
      case OrderReceivedResponseData:
        return orderReceivedResponseDataFromJson(
            data as OrderReceivedResponseData, json) as T;
      case OrderReceivedResponseDataItem:
        return orderReceivedResponseDataItemFromJson(
            data as OrderReceivedResponseDataItem, json) as T;
      case ChatRoomResponseEntity:
        return chatRoomResponseEntityFromJson(
            data as ChatRoomResponseEntity, json) as T;
      case ChatRoomResponseData:
        return chatRoomResponseDataFromJson(data as ChatRoomResponseData, json)
            as T;
      case ChatRoomResponseDataVendor:
        return chatRoomResponseDataVendorFromJson(
            data as ChatRoomResponseDataVendor, json) as T;
      case OrderPlacedResponseEntity:
        return orderPlacedResponseEntityFromJson(
            data as OrderPlacedResponseEntity, json) as T;
      case OrderPlacedResponseData:
        return orderPlacedResponseDataFromJson(
            data as OrderPlacedResponseData, json) as T;
      case OrderPlacedResponseDataItem:
        return orderPlacedResponseDataItemFromJson(
            data as OrderPlacedResponseDataItem, json) as T;
      case CartResponseEntity:
        return cartResponseEntityFromJson(data as CartResponseEntity, json)
            as T;
      case CartResponseData:
        return cartResponseDataFromJson(data as CartResponseData, json) as T;
      case CartResponseDataProduct:
        return cartResponseDataProductFromJson(
            data as CartResponseDataProduct, json) as T;
      case ProductDetailEntity:
        return productDetailEntityFromJson(data as ProductDetailEntity, json)
            as T;
      case ProductDetailData:
        return productDetailDataFromJson(data as ProductDetailData, json) as T;
      case ProductDetailDataSubcategory:
        return productDetailDataSubcategoryFromJson(
            data as ProductDetailDataSubcategory, json) as T;
      case ProductDetailDataVertical:
        return productDetailDataVerticalFromJson(
            data as ProductDetailDataVertical, json) as T;
      case PlacedOrderDetailEntity:
        return placedOrderDetailEntityFromJson(
            data as PlacedOrderDetailEntity, json) as T;
      case PlacedOrderDetailData:
        return placedOrderDetailDataFromJson(
            data as PlacedOrderDetailData, json) as T;
      case PlacedOrderDetailDataItem:
        return placedOrderDetailDataItemFromJson(
            data as PlacedOrderDetailDataItem, json) as T;
      case PlacedOrderDetailDataItemsProduct:
        return placedOrderDetailDataItemsProductFromJson(
            data as PlacedOrderDetailDataItemsProduct, json) as T;
      case PlacedOrderDetailDataItemsProductVendor:
        return placedOrderDetailDataItemsProductVendorFromJson(
            data as PlacedOrderDetailDataItemsProductVendor, json) as T;
      case SearchResultEntity:
        return searchResultEntityFromJson(data as SearchResultEntity, json)
            as T;
      case SearchResultData:
        return searchResultDataFromJson(data as SearchResultData, json) as T;
      case StateDistrictModelEntity:
        return stateDistrictModelEntityFromJson(
            data as StateDistrictModelEntity, json) as T;
      case StateDistrictModelState:
        return stateDistrictModelStateFromJson(
            data as StateDistrictModelState, json) as T;
      case CategoryEntity:
        return categoryEntityFromJson(data as CategoryEntity, json) as T;
      case CategoryData:
        return categoryDataFromJson(data as CategoryData, json) as T;
    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
    switch (type) {
      case SubcategoryResponseEntity:
        return subcategoryResponseEntityToJson(
            data as SubcategoryResponseEntity);
      case SubcategoryResponseData:
        return subcategoryResponseDataToJson(data as SubcategoryResponseData);
      case SubcategoryVertical:
        return subcategoryVerticalToJson(data as SubcategoryVertical);
      case SendMessageResponseEntity:
        return sendMessageResponseEntityToJson(
            data as SendMessageResponseEntity);

      case ProductEntity:
        return productEntityToJson(data as ProductEntity);
      case ProductData:
        return productDataToJson(data as ProductData);
      case ProductDataCategory:
        return productDataCategoryToJson(data as ProductDataCategory);
      case NotificationResponseEntity:
        return notificationResponseEntityToJson(
            data as NotificationResponseEntity);
      case NotificationResponseData:
        return notificationResponseDataToJson(data as NotificationResponseData);
      case UserEntity:
        return userEntityToJson(data as UserEntity);
      case UserData:
        return userDataToJson(data as UserData);
      case UserDataUser:
        return userDataUserToJson(data as UserDataUser);
      case ChatResponseEntity:
        return chatResponseEntityToJson(data as ChatResponseEntity);
      case ChatResponseData:
        return chatResponseDataToJson(data as ChatResponseData);
      case FavoriteResponseEntity:
        return favoriteResponseEntityToJson(data as FavoriteResponseEntity);
      case FavoriteResponseData:
        return favoriteResponseDataToJson(data as FavoriteResponseData);
      case FavoriteResponseDataVendor:
        return favoriteResponseDataVendorToJson(
            data as FavoriteResponseDataVendor);
      case UserDetailResponseEntity:
        return userDetailResponseEntityToJson(data as UserDetailResponseEntity);
      case UserDetailResponseData:
        return userDetailResponseDataToJson(data as UserDetailResponseData);
      case UserDetailResponseDataProduct:
        return userDetailResponseDataProductToJson(
            data as UserDetailResponseDataProduct);
      case OrderReceivedResponseEntity:
        return orderReceivedResponseEntityToJson(
            data as OrderReceivedResponseEntity);
      case OrderReceivedResponseData:
        return orderReceivedResponseDataToJson(
            data as OrderReceivedResponseData);
      case OrderReceivedResponseDataItem:
        return orderReceivedResponseDataItemToJson(
            data as OrderReceivedResponseDataItem);
      case ChatRoomResponseEntity:
        return chatRoomResponseEntityToJson(data as ChatRoomResponseEntity);
      case ChatRoomResponseData:
        return chatRoomResponseDataToJson(data as ChatRoomResponseData);
      case ChatRoomResponseDataVendor:
        return chatRoomResponseDataVendorToJson(
            data as ChatRoomResponseDataVendor);
      case OrderPlacedResponseEntity:
        return orderPlacedResponseEntityToJson(
            data as OrderPlacedResponseEntity);
      case OrderPlacedResponseData:
        return orderPlacedResponseDataToJson(data as OrderPlacedResponseData);
      case OrderPlacedResponseDataItem:
        return orderPlacedResponseDataItemToJson(
            data as OrderPlacedResponseDataItem);
      case CartResponseEntity:
        return cartResponseEntityToJson(data as CartResponseEntity);
      case CartResponseData:
        return cartResponseDataToJson(data as CartResponseData);
      case CartResponseDataProduct:
        return cartResponseDataProductToJson(data as CartResponseDataProduct);
      case ProductDetailEntity:
        return productDetailEntityToJson(data as ProductDetailEntity);
      case ProductDetailData:
        return productDetailDataToJson(data as ProductDetailData);
      case ProductDetailDataSubcategory:
        return productDetailDataSubcategoryToJson(
            data as ProductDetailDataSubcategory);
      case ProductDetailDataVertical:
        return productDetailDataVerticalToJson(
            data as ProductDetailDataVertical);
      case PlacedOrderDetailEntity:
        return placedOrderDetailEntityToJson(data as PlacedOrderDetailEntity);
      case PlacedOrderDetailData:
        return placedOrderDetailDataToJson(data as PlacedOrderDetailData);
      case PlacedOrderDetailDataItem:
        return placedOrderDetailDataItemToJson(
            data as PlacedOrderDetailDataItem);
      case PlacedOrderDetailDataItemsProduct:
        return placedOrderDetailDataItemsProductToJson(
            data as PlacedOrderDetailDataItemsProduct);
      case PlacedOrderDetailDataItemsProductVendor:
        return placedOrderDetailDataItemsProductVendorToJson(
            data as PlacedOrderDetailDataItemsProductVendor);
      case SearchResultEntity:
        return searchResultEntityToJson(data as SearchResultEntity);
      case SearchResultData:
        return searchResultDataToJson(data as SearchResultData);
      case StateDistrictModelEntity:
        return stateDistrictModelEntityToJson(data as StateDistrictModelEntity);
      case StateDistrictModelState:
        return stateDistrictModelStateToJson(data as StateDistrictModelState);
      case CategoryEntity:
        return categoryEntityToJson(data as CategoryEntity);
      case CategoryData:
        return categoryDataToJson(data as CategoryData);
    }
    return data as T;
  }

  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {
      case 'SubcategoryResponseEntity':
        return SubcategoryResponseEntity().fromJson(json);
      case 'SubcategoryResponseData':
        return SubcategoryResponseData().fromJson(json);
      case 'SubcategoryVertical':
        return SubcategoryVertical().fromJson(json);
      case 'SendMessageResponseEntity':
        return SendMessageResponseEntity().fromJson(json);

      case 'ProductEntity':
        return ProductEntity().fromJson(json);
      case 'ProductData':
        return ProductData().fromJson(json);
      case 'ProductDataCategory':
        return ProductDataCategory().fromJson(json);
      case 'NotificationResponseEntity':
        return NotificationResponseEntity().fromJson(json);
      case 'NotificationResponseData':
        return NotificationResponseData().fromJson(json);
      case 'UserEntity':
        return UserEntity().fromJson(json);
      case 'UserData':
        return UserData().fromJson(json);
      case 'UserDataUser':
        return UserDataUser().fromJson(json);
      case 'ChatResponseEntity':
        return ChatResponseEntity().fromJson(json);
      case 'ChatResponseData':
        return ChatResponseData().fromJson(json);
      case 'FavoriteResponseEntity':
        return FavoriteResponseEntity().fromJson(json);
      case 'FavoriteResponseData':
        return FavoriteResponseData().fromJson(json);
      case 'FavoriteResponseDataVendor':
        return FavoriteResponseDataVendor().fromJson(json);
      case 'UserDetailResponseEntity':
        return UserDetailResponseEntity().fromJson(json);
      case 'UserDetailResponseData':
        return UserDetailResponseData().fromJson(json);
      case 'UserDetailResponseDataProduct':
        return UserDetailResponseDataProduct().fromJson(json);
      case 'OrderReceivedResponseEntity':
        return OrderReceivedResponseEntity().fromJson(json);
      case 'OrderReceivedResponseData':
        return OrderReceivedResponseData().fromJson(json);
      case 'OrderReceivedResponseDataItem':
        return OrderReceivedResponseDataItem().fromJson(json);
      case 'ChatRoomResponseEntity':
        return ChatRoomResponseEntity().fromJson(json);
      case 'ChatRoomResponseData':
        return ChatRoomResponseData().fromJson(json);
      case 'ChatRoomResponseDataVendor':
        return ChatRoomResponseDataVendor().fromJson(json);
      case 'OrderPlacedResponseEntity':
        return OrderPlacedResponseEntity().fromJson(json);
      case 'OrderPlacedResponseData':
        return OrderPlacedResponseData().fromJson(json);
      case 'OrderPlacedResponseDataItem':
        return OrderPlacedResponseDataItem().fromJson(json);
      case 'CartResponseEntity':
        return CartResponseEntity().fromJson(json);
      case 'CartResponseData':
        return CartResponseData().fromJson(json);
      case 'CartResponseDataProduct':
        return CartResponseDataProduct().fromJson(json);
      case 'ProductDetailEntity':
        return ProductDetailEntity().fromJson(json);
      case 'ProductDetailData':
        return ProductDetailData().fromJson(json);
      case 'ProductDetailDataSubcategory':
        return ProductDetailDataSubcategory().fromJson(json);
      case 'ProductDetailDataVertical':
        return ProductDetailDataVertical().fromJson(json);
      case 'PlacedOrderDetailEntity':
        return PlacedOrderDetailEntity().fromJson(json);
      case 'PlacedOrderDetailData':
        return PlacedOrderDetailData().fromJson(json);
      case 'PlacedOrderDetailDataItem':
        return PlacedOrderDetailDataItem().fromJson(json);
      case 'PlacedOrderDetailDataItemsProduct':
        return PlacedOrderDetailDataItemsProduct().fromJson(json);
      case 'PlacedOrderDetailDataItemsProductVendor':
        return PlacedOrderDetailDataItemsProductVendor().fromJson(json);
      case 'SearchResultEntity':
        return SearchResultEntity().fromJson(json);
      case 'SearchResultData':
        return SearchResultData().fromJson(json);
      case 'StateDistrictModelEntity':
        return StateDistrictModelEntity().fromJson(json);
      case 'StateDistrictModelState':
        return StateDistrictModelState().fromJson(json);
      case 'CategoryEntity':
        return CategoryEntity().fromJson(json);
      case 'CategoryData':
        return CategoryData().fromJson(json);
    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {
      case 'SubcategoryResponseEntity':
        return List<SubcategoryResponseEntity>();
      case 'SubcategoryResponseData':
        return List<SubcategoryResponseData>();
      case 'SubcategoryVertical':
        return List<SubcategoryVertical>();
      case 'SendMessageResponseEntity':
        return List<SendMessageResponseEntity>();

      case 'ProductEntity':
        return List<ProductEntity>();
      case 'ProductData':
        return List<ProductData>();
      case 'ProductDataCategory':
        return List<ProductDataCategory>();
      case 'NotificationResponseEntity':
        return List<NotificationResponseEntity>();
      case 'NotificationResponseData':
        return List<NotificationResponseData>();
      case 'UserEntity':
        return List<UserEntity>();
      case 'UserData':
        return List<UserData>();
      case 'UserDataUser':
        return List<UserDataUser>();
      case 'ChatResponseEntity':
        return List<ChatResponseEntity>();
      case 'ChatResponseData':
        return List<ChatResponseData>();
      case 'FavoriteResponseEntity':
        return List<FavoriteResponseEntity>();
      case 'FavoriteResponseData':
        return List<FavoriteResponseData>();
      case 'FavoriteResponseDataVendor':
        return List<FavoriteResponseDataVendor>();
      case 'UserDetailResponseEntity':
        return List<UserDetailResponseEntity>();
      case 'UserDetailResponseData':
        return List<UserDetailResponseData>();
      case 'UserDetailResponseDataProduct':
        return List<UserDetailResponseDataProduct>();
      case 'OrderReceivedResponseEntity':
        return List<OrderReceivedResponseEntity>();
      case 'OrderReceivedResponseData':
        return List<OrderReceivedResponseData>();
      case 'OrderReceivedResponseDataItem':
        return List<OrderReceivedResponseDataItem>();
      case 'ChatRoomResponseEntity':
        return List<ChatRoomResponseEntity>();
      case 'ChatRoomResponseData':
        return List<ChatRoomResponseData>();
      case 'ChatRoomResponseDataVendor':
        return List<ChatRoomResponseDataVendor>();
      case 'OrderPlacedResponseEntity':
        return List<OrderPlacedResponseEntity>();
      case 'OrderPlacedResponseData':
        return List<OrderPlacedResponseData>();
      case 'OrderPlacedResponseDataItem':
        return List<OrderPlacedResponseDataItem>();
      case 'CartResponseEntity':
        return List<CartResponseEntity>();
      case 'CartResponseData':
        return List<CartResponseData>();
      case 'CartResponseDataProduct':
        return List<CartResponseDataProduct>();
      case 'ProductDetailEntity':
        return List<ProductDetailEntity>();
      case 'ProductDetailData':
        return List<ProductDetailData>();
      case 'ProductDetailDataSubcategory':
        return List<ProductDetailDataSubcategory>();
      case 'ProductDetailDataVertical':
        return List<ProductDetailDataVertical>();
      case 'PlacedOrderDetailEntity':
        return List<PlacedOrderDetailEntity>();
      case 'PlacedOrderDetailData':
        return List<PlacedOrderDetailData>();
      case 'PlacedOrderDetailDataItem':
        return List<PlacedOrderDetailDataItem>();
      case 'PlacedOrderDetailDataItemsProduct':
        return List<PlacedOrderDetailDataItemsProduct>();
      case 'PlacedOrderDetailDataItemsProductVendor':
        return List<PlacedOrderDetailDataItemsProductVendor>();
      case 'SearchResultEntity':
        return List<SearchResultEntity>();
      case 'SearchResultData':
        return List<SearchResultData>();
      case 'StateDistrictModelEntity':
        return List<StateDistrictModelEntity>();
      case 'StateDistrictModelState':
        return List<StateDistrictModelState>();
      case 'CategoryEntity':
        return List<CategoryEntity>();
      case 'CategoryData':
        return List<CategoryData>();
    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}
